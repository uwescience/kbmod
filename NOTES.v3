CREATE DATABASE kbmod3;
\c kbmod3
CREATE EXTENSION postgis;

####

CREATE TABLE ImageSetSDSS ( 
    setId INTEGER PRIMARY KEY,
    run INTEGER,
    camcol SMALLINT,
    filter VARCHAR(1),
    bbox GEOMETRY(POLYGON,3786),
    trange TSTZRANGE
);
CREATE INDEX set_bbox_idx ON ImageSetSDSS USING gist (bbox gist_geometry_ops_nd);
CLUSTER ImageSetSDSS USING set_bbox_idx;

####

CREATE TABLE Run AS 
SELECT run, 
    MIN(LOWER(trange)) AS tmin, 
    MAX(UPPER(trange)) AS tmax,
    ST_SetSRID(ST_Extent(bbox), 3786) as bbox
FROM ImageSetSDSS GROUP BY run ORDER BY run;
CREATE INDEX run_bbox_idx ON Run USING gist (bbox gist_geometry_ops_nd);
CLUSTER Run USING run_bbox_idx;

####

CREATE TABLE Image ( 
    imageId BIGINT PRIMARY KEY,
    setId INTEGER,
    positionId INTEGER,
    bbox GEOMETRY(POLYGON,3786),
    tmid TIMESTAMP WITH TIME ZONE,
    trange TSTZRANGE,
    bbox3d GEOMETRY
);
UPDATE Image SET bbox3d = 
  ST_ConvexHull(ST_Collect(ST_Makepoint(ST_xmin(bbox), ST_ymin(bbox), EXTRACT(EPOCH FROM LOWER (trange))),
                           ST_Makepoint(ST_xmax(bbox), ST_ymax(bbox), EXTRACT(EPOCH FROM UPPER (trange)))));
ALTER TABLE Image ADD CONSTRAINT "image_setid_fkey" FOREIGN KEY (setId) REFERENCES ImageSetSDSS (setId) MATCH FULL;
CREATE INDEX image_bbox3d_idx ON Image USING gist (bbox3d gist_geometry_ops_nd);
CLUSTER Image USING image_bbox3d_idx;
CREATE INDEX image_set_idx ON Image (setId);

# Not sure if I need this;
ALTER TABLE Image ADD COLUMN runId INTEGER;
UPDATE Image SET runId = s.run FROM ImageSetSDSS as s, Image as i WHERE s.setId=i.setId;
CREATE INDEX image_run_idx ON Image (runId);
ALTER TABLE Image DROP COLUMN runId;

####

CREATE TABLE Trajectory (
   trajId    BIGSERIAL PRIMARY KEY, 
   t0        TIMESTAMP WITH TIME ZONE,
   ra0       DOUBLE PRECISION,
   dec0      DOUBLE PRECISION,
   delta_ra  DOUBLE PRECISION,
   delta_dec DOUBLE PRECISION
);

INSERT INTO Trajectory (t0, ra0, dec0, delta_ra, delta_dec) 
 (SELECT tmid, ST_x(ST_Centroid(bbox)), ST_y(ST_Centroid(bbox)), 7.7e-8, 7.7e-8 FROM Image LIMIT 1);

##### 

OK this took a while to parse out.  The question is, do you do an initial culling of images by 
using a "run", which can be thought of as a night of data, or a "set", which is a (run,camcol,filter)
for SDSS but could be an Exposure for LSST.  We have 18 sets per run for SDSS, and will have ~1000 sets 
per run/night for LSST.  We limit the number of trajectory evaluations by doing it per run.  Since
this is likely to be large, this is probably a long term win.  

We have 2 sets of queries to test this (and then additional sub-optimizations)


# Q1, version A  (Q1A; slices on sets)
WITH TL AS (
    SELECT
       set.setId as setId,
       traj.trajId as trajId,
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM LOWER(set.trange))), 
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM UPPER(set.trange)))) as tline
    FROM 
       Trajectory as traj,
       ImageSetSDSS as set
  )
SELECT 
  im.imageId, TL.setId, TL.trajId
FROM
  Image as im,
  TL
WHERE
  im.bbox3d &&& TL.tline
AND
  im.setId = TL.setId
;

# Q1B
WITH TL AS (
    SELECT
       set.setId as setId,
       traj.trajId as trajId,
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM LOWER(set.trange))), 
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM UPPER(set.trange)))) as tline
    FROM 
       Trajectory as traj,
       ImageSetSDSS as set
    WHERE
        set.bbox && 
        ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_ra, 
                                 traj.dec0 + EXTRACT(EPOCH FROM LOWER(set.trange)-traj.t0) * traj.delta_dec),
                    ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_ra, 
                                 traj.dec0 + EXTRACT(EPOCH FROM UPPER(set.trange)-traj.t0) * traj.delta_dec))
  )
SELECT 
  im.imageId, TL.trajId
FROM
  Image as im,
  TL
WHERE
  im.bbox3d &&& TL.tline
AND
  im.setId = TL.setId
;

# Query 2, version A (slices on runs)
WITH TL AS (
    SELECT
       traj.trajId as trajId,
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmin)), 
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmax))) as tline
    FROM 
       Trajectory as traj,
       Run as run
  )
SELECT 
  im.imageId, TL.trajId
FROM
  Image as im,
  TL
WHERE
  im.bbox3d &&& TL.tline
;

# Q2B
WITH TL AS (
    SELECT
       traj.trajId as trajId,
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmin)), 
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmax))) as tline
    FROM 
       Trajectory as traj,
       Run as run
    WHERE
       run.bbox && 
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_dec),
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_dec))
  )
SELECT 
  im.imageId, TL.trajId
FROM
  Image as im,
  TL
WHERE
  im.bbox3d &&& TL.tline
;

# Note that we also need to find the intersection Ra,Dec
# And (at this stage) limit the search window to ~30 days = 2592000 seconds
WITH TL AS (
    SELECT
       traj.trajId as trajId, 
       traj.ra0 as ra0,
       traj.dec0 as dec0,
       traj.t0 as t0,
       traj.delta_ra as delta_ra,
       traj.delta_dec as delta_dec,
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmin)), 
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_dec,
                                EXTRACT(EPOCH FROM run.tmax))) as tline
    FROM 
       Trajectory as traj,
       Run as run
    WHERE
       run.bbox && 
       ST_MakeLine(ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmin-traj.t0) * traj.delta_dec),
                   ST_MakePoint(traj.ra0  + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_ra, 
                                traj.dec0 + EXTRACT(EPOCH FROM run.tmax-traj.t0) * traj.delta_dec))
    AND
       ABS(EXTRACT(EPOCH FROM run.tmax-traj.t0)) < 2592000
  )
SELECT 
  im.imageId, TL.trajId,
  (TL.ra0  + EXTRACT(EPOCH FROM im.tmid-TL.t0) * TL.delta_ra) as raInt, 
  (TL.dec0 + EXTRACT(EPOCH FROM im.tmid-TL.t0) * TL.delta_dec) as decInt
FROM
  Image as im,
  TL
WHERE
  im.bbox3d &&& TL.tline
;
# DOES NOT SLOW THINGS DOWN
1 0.029 +/- 0.002   0.028 +/- 0.001
5 0.056 +/- 0.008   0.057 +/- 0.013
10 0.085 +/- 0.007   0.059 +/- 0.003
50 0.302 +/- 0.014   0.218 +/- 0.023

# Lets stick with a limited data set for now, to test out Wcs queries
CREATE TABLE TrajectoryFixed AS (SELECT * FROM Trajectory);
ALTER TABLE TrajectoryFixed ADD PRIMARY KEY (trajId);
